#include "puck_block.h"
#include "xparameters.h"
#include "xil_io.h"
#include "stable_puck_detection.h"

void puck_block_init()
{
	set_h_start(250);
	set_h_stop(975);
	set_v_start(5);
	set_v_stop(700);
	set_threshold(110);
	set_pixel_count(140);
	set_new_colour(0x00ff0000);
	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG10_OFFSET, 1063);
	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG11_OFFSET, 1500);

	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG12_OFFSET, 1);
	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG13_OFFSET, 1800);
	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG14_OFFSET, 200);

}

void set_h_start(unsigned int val)
{
	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG0_OFFSET, val);
}
void set_h_stop(unsigned int val)
{
	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG1_OFFSET, val);
}
void set_v_start(unsigned int val)
{

	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG2_OFFSET, val);
}
void set_v_stop(unsigned int val)
{

	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG3_OFFSET, val);
}

void set_threshold( unsigned int thres)
{
	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG4_OFFSET, thres);
}

void set_pixel_count(unsigned int p_count)
{
	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG5_OFFSET, p_count);
}

void set_new_colour(unsigned int val)
{
	STABLE_PUCK_DETECTION_mWriteReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG6_OFFSET, val);
}

unsigned int get_x_pos()
{
	return STABLE_PUCK_DETECTION_mReadReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG8_OFFSET);
}

unsigned int get_y_pos()
{
	return STABLE_PUCK_DETECTION_mReadReg(XPAR_STABLE_PUCK_DETECTION_0_S00_AXI_BASEADDR, STABLE_PUCK_DETECTION_S00_AXI_SLV_REG9_OFFSET);
}


